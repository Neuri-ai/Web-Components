(()=>{"use strict";class t extends HTMLElement{constructor(){super(),this.shadowDOM=this.attachShadow({mode:"open"})}connectedCallback(){this.mapComponentAttributes(),this.render(),this.initComponent()}mapComponentAttributes(){["delay","styles"].map((t=>{this.attributes[t]||(this.attributes[t]={value:""})}))}render(){this.shadowDOM.innerHTML=`\n        ${this.templateCss()}\n        ${this.template()}\n    `}template(){return'\n        <div class="drawer-component">\n            <h1 class="drawer-transcript"></h1>\n        </div>\n    '}templateCss(){return this.attributes.styles.value?this.attributes.styles.value.includes("http")?`\n        <style>@import "${this.attributes.styles}";</style>\n      `:` <style>${this.attributes.styles.value}</style>`:"\n\t\t\t  <style>\n          @import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');\n          .drawer-component {\n            padding: 10px;\n            background-color: #172641;\n            border-radius: 10px;\n            width: fit-content;\n            display: none;\n            transition: all 3s ease;\n          }\n          .drawer-component h1 {\n            font-family: 'Poppins', sans-serif;\n            font-size: 16px;\n            color: white;\n            font-weight: bold;\n            text-transform: uppercase;\n          }\n          .drawer-highlight{\n            color: #75D8EF;\n          }\n\t  \t  </style>\n\t\t  "}async initComponent(){this.$root=this.shadowDOM.querySelector(".drawer-component"),this.drawerTranscript=this.shadowDOM.querySelector(".drawer-transcript"),this.phrase=[],window.addEventListener("onSpeech",(t=>{this.data=t.detail,null!=this.data.transcription&&(this.drawerTranscript.innerHTML=this.data.transcription,this.$root.style.display="block")})),window.addEventListener("onResult",(t=>{this.data=t.detail,this.data.entities&&(this.data.entities.forEach((t=>{this.drawerTranscript.innerHTML=this.drawerTranscript.innerHTML.replace(t.text,`<span class="drawer-highlight">${t.text}</span>`)})),setTimeout((()=>{this.$root.style.display="none",this.drawerTranscript.innerHTML=""}),parseInt(this.attributes.delay.value)||1500))}))}disconnectedCallback(){this.remove()}}const e=t;customElements.get("drawer-component")||customElements.define("drawer-component",e)})();